#!/usr/bin/env ruby
# frozen_string_literal: true

#-------------------------------------------------------------------------------
# isodate
# MIT License, (c) 2022 Liam Cooke
#-------------------------------------------------------------------------------
#
# Read dates from command line arguments, and print the weekdays and dates in
# ISO 8601 format.
#
# Example:
#
#   $ isodate '1 Feb 2022' '27/07/1987'
#   Tue 2022-02-01
#   Mon 1987-07-27
#
# Supports natural language parsing if the Chronic gem is installed. Example:
#
#   $ gem install chronic
#   $ isodate yesterday tomorrow '30 days ago' 'this friday' '1 year from now'
#   Tue 2022-02-08
#   Thu 2022-02-10
#   Mon 2022-01-10
#   Fri 2022-02-11
#   Thu 2023-02-09
#
#-------------------------------------------------------------------------------

require 'date'

begin; require 'chronic'; rescue LoadError; nil; end

def chronic_parse(string)
  Chronic.parse(string, endian_precedence: :little)&.to_date
end

def date_parse(string)
  Date.parse(string)
rescue ArgumentError
  nil
end

def parse(string)
  defined?(Chronic) ? chronic_parse(string) : date_parse(string)
end

def format_date(date)
  date.strftime('%a %F')
end

def main_with_args
  ARGV.each do |arg|
    date = parse(arg)
    if date
      puts format_date(date)
    else
      warn "Invalid date: #{arg}"
      return 1
    end
  end
  nil
end

def main_default
  puts format_date(Date.today)
end

def main
  ARGV.empty? ? main_default : main_with_args
end

exit(main || 0) if __FILE__ == $PROGRAM_NAME
